#summary OpenPGM 5 : C Reference : Socket : pgm_select_info()
#labels Phase-Implementation
#sidebar TOC5CReferenceSocket
_Function_
=== Declaration ===
<pre>
#include <pgm/pgm.h>

int *pgm_select_info* (
	[OpenPgm5CReferencePgmSockT pgm_sock_t]`*` const    sock,
	fd_set`*`              readfds,
	fd_set`*`              writefds,
	int`*`                 nfds
	);
</pre>

=== Purpose ===
Set parameters suitable for feeding into <tt>select()</tt>.

=== Parameters ===

<table border="1" cellpadding="5" cellspacing="0">
<tr>
<th>Parameter</th>
<th>Description</th>
</tr>
<tr>
<td><tt>sock</tt></td>
<td>The PGM socket object.</td>
</tr><tr>
<td><tt>readfds</tt></td>
<td>File descriptors to be watched for reading.</td>
</tr><tr>
<td><tt>writefds</tt></td>
<td>File descriptors to be watched for writing.</td>
</tr><tr>
<td><tt>nfds</tt></td>
<td>Highest-numbered file descriptor plus 1.</td>
</tr>
</table>

=== Return Value ===
On success, returns the highest-numbered file descriptor plus 1.  If the transport is closed, returns -1 and sets <tt>errno</tt> to <tt>EBADF</tt>.

=== Example ===
Monitor the PGM transport for incoming events.

{{{
 int nfds = 0;
 fd_set readfds;
 FD_ZERO(&readfds);
 pgm_select_info (sock, &readfds, NULL, &nfds);
 nfds = select (nfds, &readfds, NULL, NULL, NULL);
}}}

=== See Also ===
  * <tt>[OpenPgm5CReferencePgmSockT pgm_sock_t]</tt><br>
  * <tt>[OpenPgm5CReferencePgmPollInfo pgm_poll_info()]</tt><br>
  * <tt>[OpenPgm5CReferencePgmEpollCtl pgm_epoll_ctl()]</tt><br>
  * [OpenPgm5CReferenceSocket Socket] in OpenPGM C Reference.
