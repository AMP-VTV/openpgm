Millisecond level timers are handled by the platforms LIBC library, high resolution timers for intervals less than a millisecond require direct polling of the core and its associated internal clock.


[[Image:OpenPGM stack.png]]


Timer events are generated at repeating intervals, there is a overhead between the actual interval time and the callback time which can vary with the number of timers being processed.  A typical timer event timeline looks as follows.


[[Image:OpenPGM timer events.png]]


Using the GLib API note that the interval is calculated after the timer callback, so the actual timeline would be this.


[[Image:OpenPGM GLib timer events.png]]


The high resolution timing by OpenPGM is a best attempt at the first by using the latter with actual execution time offsets and microsecond accuracy.


[[Image:OpenPGM HR timer events.png]]


After the callback the second interval if elapsed would cause another callback, for performance reasons if multiple timer intervals have elapsed during the callback only one event is generated.

